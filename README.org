#+TITLE: Lab 01: creating a simple OpenGL application
#+SUBTITLE: PROG2002 -- Graphics Programming -- Autumn 2020
#+AUTHOR: Rafael Palomar and Mekides Assefa

* Introduction

This lab will be the first contact with some of the libraries that will be used
during the course. The objective of the lab **is only testing your hardware,
libraries and development environment to make sure you are all set for the labs
and assignments**. This project is a concise example of:

- Creation of a simple OpenGL application using CMake, Git, GLFW and glad.
- Display a white triangle in over a red background.
- Printout drivers information, OpenGL version and profile.

You are free to use any operating system, however the instructions of this lab
are only available for Microsoft Windows and GNU/Linux systems (mostly
debian-based).

* Pre-requisites

- OpenGL >= 4.3 :: OpenGL is the industry&rsquo;s most widely used, supported
  and best documented 2D/3D graphics API making it inexpensive and easy to obtain
  information on implementing OpenGL in hardware and software. You should try to
  get the latest graphics drivers available for your platform. On MS Windows,
  the header files will be bundled with your compiler; on GNU/Linux
  (debian-based systems) it is needed to install the =mesa-common-dev= package.

* Instructions for Windows

We will be using Visual Studio.

1. Open Visual Studio. You should see different ways to import/open your
   projects. Go for clone from repository.

2. Introduce the url of the repository: =https://github.com/rafaelpalomar/prog2002_lab01=

3. You should be able to navigate to the project and see all files and folders.
   Then you can select the target you want to build (=lab01.exe=) by clicking
   the dropdown button next to the compile button (green play icon), that is

* Instructions for Linux (command-line)


1. Install dependent libraries

#+BEGIN_SRC bash
apt install mesa-common-dev libxinerama-dev libxinput-dev libxi-dev
#+END_SRC

2. Clone the repository

   #+begin_src bash
   git clone https://github.com/rafaelpalomar/prog2002_lab01 --recursive
   #+end_src

   Note the =--recursive= flag that will pull =glfw= as a submodule.

3. Create a folder for the project build (e.g., /home/rafael/prog2002_lab01/build)

4. Configure the project:
   #+begin_src
   cd /home/rafael/prog2002_lab01/build
   cmake ../
   make
   #+end_src
